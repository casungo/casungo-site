---
import NowPlayingIcon from "@components/NowPlayingIcon.astro";

const fetchRecentTrack = async () => {
  const url = `http://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=casungo&api_key=${import.meta.env.SECRET_LASTFM_KEY}&limit=1&format=json`;
  const response = await fetch(url);
  const data = await response.json();
  return data.recenttracks.track[0];
};

const formatNowPlaying = (track) => {
  return {
    song: track.name,
    artist: track.artist["#text"],
    image: track.image[3]["#text"],
    playingSomething: track["@attr"]?.nowplaying,
  };
};

const { title, by, notPlayingSomethingText } = Astro.props;
const nowPlaying = formatNowPlaying(await fetchRecentTrack());
---

<div class="position-fixed bottom-0 end-0" style="z-index: 7;">
  <div class="collapse" id="collapseWidthExample">
    {
      nowPlaying.playingSomething ? (
        <div class="pm-3 mx-3 my-2 card position-sticky top-100 start-100">
          <div class="row g-0">
            <div class="col-4">
              <img src={nowPlaying.image} class="img-fluid rounded-start img-cover" alt="Album Art" width="150" />
            </div>
            <div class="col-8">
              <div class="card-body">
                <h6 class="card-title">{title}</h6>
                <p class="card-text">{nowPlaying.song}</p>
                <p class="card-text text-body-secondary">
                  {by} {nowPlaying.artist}
                </p>
              </div>
            </div>
          </div>
        </div>
      ) : (
        <div class="pm-3 mx-3 my-2 card position-sticky top-100 start-100" style="width: 18rem;">
          <div class="card-body">{notPlayingSomethingText}</div>
        </div>
      )
    }
  </div>

  <p>
    <button class="position-sticky top-100 start-100 pm-3 mx-3 btn btn-light" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWidthExample" aria-expanded="false" aria-controls="collapseWidthExample"
      ><NowPlayingIcon />
    </button>
  </p>
</div>
